{
	"cases": [
		{
			"note": "graphql_schema_is_valid/success extending non-existent types",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend type User {\n      id: ID!\n  }\n  extend type Product {\n      upc: String!\n  }\n  union _Entity = Product | User\n  extend type Query {\n    entity: _Entity\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend type User {\n      id: ID!\n  }\n  extend type Product {\n      upc: String!\n  }\n  union _Entity = Product | User\n  extend type Query {\n    entity: _Entity\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 16
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 17
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 17
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 17
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 17
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 16
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 16
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 16
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 16
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success validation rules are independent case 1 and 2",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend type Query {\n      myAction(myEnum: Locale!): SomeResult!\n  }\n  type SomeResult {\n      id: String\n  }\n  enum Locale {\n      EN\n      LT\n      DE\n  }\n`\n\n# We use the unification style from semver's is_valid tests here:\np := x if {\n\tx = graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend type Query {\n      myAction(myEnum: Locale!): SomeResult!\n  }\n  type SomeResult {\n      id: String\n  }\n  enum Locale {\n      EN\n      LT\n      DE\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 18
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 30,
												"row": 19
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 30,
												"row": 19
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 6,
												"row": 19
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 6,
												"row": 19
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 19
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 18
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 18
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 18
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 18
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success deprecating types",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type DeprecatedType {\n    deprecatedField: String @deprecated\n    newField(deprecatedArg: Int): Boolean\n  }\n  enum DeprecatedEnum {\n    ALPHA @deprecated\n  }\n`\n\nquery := ``\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type DeprecatedType {\n    deprecatedField: String @deprecated\n    newField(deprecatedArg: Int): Boolean\n  }\n  enum DeprecatedEnum {\n    ALPHA @deprecated\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 15
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 16
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 16
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 16
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 16
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 15
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 15
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 15
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 15
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success no unused variables",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Query {\n    bar: String!\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Query {\n    bar: String!\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success - AST objects - Employee example",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema_ast := graphql.parse_schema(`\n  type Employee {\n    id: String!\n    salary: Int!\n  }\n\n  schema {\n    query: Query\n  }\n\n  type Query {\n    employeeByID(id: String): Employee\n  }\n`)\n\np if {\n\tgraphql.schema_is_valid(schema_ast)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Employee {\n    id: String!\n    salary: Int!\n  }\n\n  schema {\n    query: Query\n  }\n\n  type Query {\n    employeeByID(id: String): Employee\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.parse_schema",
							"decl": {
								"args": [
									{
										"description": "GraphQL schema string",
										"name": "schema",
										"type": "string"
									}
								],
								"result": {
									"description": "AST object for the GraphQL schema.",
									"dynamic": {
										"key": {
											"type": "any"
										},
										"value": {
											"type": "any"
										}
									},
									"name": "output",
									"type": "object"
								},
								"type": "function"
							}
						},
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema_ast",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.parse_schema",
												"args": [
													{
														"type": "string_index",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 15,
												"row": 3
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 15,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 5
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema_ast"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 18
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema_ast",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 19
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 19
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 19
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 19
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 18
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 18
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 18
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 18
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello {\n    world: String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions with description",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  \"Description\"\n  type Hello {\n    world: String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  \"Description\"\n  type Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 11
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 11
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 11
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 11
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 10
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 10
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 10
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions with block description",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  \"\"\"\n  Description\n  \"\"\"\n  # Even with comments between them\n  type Hello {\n    world: String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  \"\"\"\n  Description\n  \"\"\"\n  # Even with comments between them\n  type Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 13
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 14
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 14
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 14
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 14
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 13
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 13
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 13
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 13
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions with field arg",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello {\n    world(flag: Boolean): String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello {\n    world(flag: Boolean): String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions with field arg and default value",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello {\n    world(flag: Boolean = true): String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello {\n    world(flag: Boolean = true): String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions with field list arg",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello {\n    world(things: [String]): String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello {\n    world(things: [String]): String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-object-extensions with two args",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello {\n    world(argOne: Boolean, argTwo: Int): String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello {\n    world(argOne: Boolean, argTwo: Int): String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-object-extensions must define one or more fields",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello {}\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello {}\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-type-extensions object extension",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend type Hello {\n    world: String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend type Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-type-extensions without any fields",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend type Hello implements Greeting\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend type Hello implements Greeting\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-type-extensions without fields twice",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend type Hello implements Greeting\n  extend type Hello implements SecondGreeting\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend type Hello implements Greeting\n  extend type Hello implements SecondGreeting\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 9
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 9
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 9
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 8
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 8
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 8
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-type-extensions without anything errors",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend type Hello\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend type Hello\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-type-extensions can have descriptions",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  \"Description\"\n  extend type Hello {\n    world: String\n  }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  \"Description\"\n  extend type Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 11
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 11
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 11
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 11
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 11
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 10
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 10
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 10
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-type-extensions can not have descriptions on types",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend \"Description\" type Hello {\n    world: String\n  }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend \"Description\" type Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-type-extensions all can have directives",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend scalar Foo @deprecated\n  extend type Foo @deprecated\n  extend interface Foo @deprecated\n  extend union Foo @deprecated\n  extend enum Foo @deprecated\n  extend input Foo @deprecated\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend scalar Foo @deprecated\n  extend type Foo @deprecated\n  extend interface Foo @deprecated\n  extend union Foo @deprecated\n  extend enum Foo @deprecated\n  extend input Foo @deprecated\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 12
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 13
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 13
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 13
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 13
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 13
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 12
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 12
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 12
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 12
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-schema-definition simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  schema {\n    query: Query\n  }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  schema {\n    query: Query\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-schema-extensions simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend schema {\n    mutation: Mutation\n  }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend schema {\n    mutation: Mutation\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-schema-extensions directive only",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend schema @directive\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend schema @directive\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-schema-extensions without anything errors",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  extend schema\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  extend schema\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-inheritance single",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello implements World { field: String }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello implements World { field: String }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-inheritance multi",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello implements Wo \u0026 rld { field: String }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello implements Wo \u0026 rld { field: String }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-inheritance multi with leading amp",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  type Hello implements \u0026 Wo \u0026 rld { field: String }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  type Hello implements \u0026 Wo \u0026 rld { field: String }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-enums single value",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  enum Hello { WORLD }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  enum Hello { WORLD }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-enums double value",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  enum Hello { WO, RLD }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  enum Hello { WO, RLD }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-enums must define one or more unique enum values",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  enum Hello {}\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  enum Hello {}\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-interface simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  interface Hello {\n    world: String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  interface Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-interface must define one or more fields",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  interface Hello {}\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  interface Hello {}\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-interface may define intermediate interfaces",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  interface IA {\n    id: ID!\n  }\n  interface IIA implements IA {\n    id: ID!\n  }\n  type A implements IIA {\n    id: ID!\n  }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  interface IA {\n    id: ID!\n  }\n  interface IIA implements IA {\n    id: ID!\n  }\n  type A implements IIA {\n    id: ID!\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 15
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 16
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 16
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 16
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 16
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 16
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 15
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 15
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 15
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 15
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-unions simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  union Hello = World\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  union Hello = World\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-unions with two types",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  union Hello = Wo | Rld\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  union Hello = Wo | Rld\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-unions with leading pipe",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  union Hello = | Wo | Rld\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  union Hello = | Wo | Rld\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-unions cant be empty",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  union Hello = || Wo | Rld\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  union Hello = || Wo | Rld\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-unions cant double pipe",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  union Hello = Wo || Rld\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  union Hello = Wo || Rld\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-unions cant have trailing pipe",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  union Hello = | Wo | Rld |\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  union Hello = | Wo | Rld |\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-scalar simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  scalar Hello\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  scalar Hello\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-input-objects simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  input Hello {\n    world: String\n  }\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  input Hello {\n    world: String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-input-objects can not have args",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  input Hello {\n    world(foo: Int): String\n  }\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  input Hello {\n    world(foo: Int): String\n  }\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 10
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 10
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 10
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 9
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 9
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-input-objects must define one or more input fields",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  input Hello {}\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  input Hello {}\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-directives simple",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  directive @foo on FIELD\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  directive @foo on FIELD\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-directives executable",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  directive @onQuery on QUERY\n  directive @onMutation on MUTATION\n  directive @onSubscription on SUBSCRIPTION\n  directive @onField on FIELD\n  directive @onFragmentDefinition on FRAGMENT_DEFINITION\n  directive @onFragmentSpread on FRAGMENT_SPREAD\n  directive @onInlineFragment on INLINE_FRAGMENT\n  directive @onVariableDefinition on VARIABLE_DEFINITION\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  directive @onQuery on QUERY\n  directive @onMutation on MUTATION\n  directive @onSubscription on SUBSCRIPTION\n  directive @onField on FIELD\n  directive @onFragmentDefinition on FRAGMENT_DEFINITION\n  directive @onFragmentSpread on FRAGMENT_SPREAD\n  directive @onInlineFragment on INLINE_FRAGMENT\n  directive @onVariableDefinition on VARIABLE_DEFINITION\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 14
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 15
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 15
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 15
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 15
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 14
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 14
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 14
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 14
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/success-directives repeatable",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  directive @foo repeatable on FIELD\n`\n\np if {\n\tgraphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": true
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  directive @foo repeatable on FIELD\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 26,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "NotEqualStmt",
											"stmt": {
												"a": {
													"type": "local",
													"value": 6
												},
												"b": {
													"type": "bool",
													"value": false
												},
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "bool",
													"value": true
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": true
				}
			]
		},
		{
			"note": "graphql_schema_is_valid/failure-directives invalid location",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\nschema := `\n  directive @foo on FIELD | INCORRECT_LOCATION\n`\n\np := x if {\n\tx := graphql.schema_is_valid(schema)\n}\n"
			],
			"want_result": [
				{
					"x": false
				}
			],
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "\n  directive @foo on FIELD | INCORRECT_LOCATION\n"
						}
					],
					"builtin_funcs": [
						{
							"name": "graphql.schema_is_valid",
							"decl": {
								"args": [
									{
										"description": "the schema to verify",
										"name": "schema",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "`true` if the schema is a valid GraphQL schema. `false` otherwise.",
									"name": "output",
									"type": "boolean"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.schema",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "string_index",
													"value": 1
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"schema"
							]
						},
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.schema",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 31,
												"row": 8
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "graphql.schema_is_valid",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 8
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 8
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 8
												},
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "IsDefinedStmt",
											"stmt": {
												"source": 3,
												"file": 0,
												"col": 1,
												"row": 7
											}
										},
										{
											"type": "AssignVarOnceStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 3
												},
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 7
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": false
				}
			]
		}
	]
}