{
	"cases": [
		{
			"note": "aggregates/count with invalid utf-8 chars (0xFFFD)",
			"query": "data.test.p = x",
			"modules": [
				"package test\n\np contains x if {\n\tx := count(base64.decode(\"2E84ZuPUd7zfvCZSNEchVpDEIj6PL7JfLpIqyxVG16k=\"))\n}\n"
			],
			"want_result": [
				{
					"x": [
						30
					]
				}
			],
			"sort_bindings": true,
			"entrypoints": [
				"eval"
			],
			"plan": {
				"static": {
					"strings": [
						{
							"value": "x"
						},
						{
							"value": "2E84ZuPUd7zfvCZSNEchVpDEIj6PL7JfLpIqyxVG16k="
						}
					],
					"builtin_funcs": [
						{
							"name": "base64.decode",
							"decl": {
								"args": [
									{
										"description": "string to decode",
										"name": "x",
										"type": "string"
									}
								],
								"result": {
									"description": "base64 deserialization of `x`",
									"name": "y",
									"type": "string"
								},
								"type": "function"
							}
						},
						{
							"name": "count",
							"decl": {
								"args": [
									{
										"description": "the set/array/object/string to be counted",
										"name": "collection",
										"of": [
											{
												"type": "string"
											},
											{
												"dynamic": {
													"type": "any"
												},
												"type": "array"
											},
											{
												"dynamic": {
													"key": {
														"type": "any"
													},
													"value": {
														"type": "any"
													}
												},
												"type": "object"
											},
											{
												"of": {
													"type": "any"
												},
												"type": "set"
											}
										],
										"type": "any"
									}
								],
								"result": {
									"description": "the count of elements, key/val pairs, or characters, respectively.",
									"name": "n",
									"type": "number"
								},
								"type": "function"
							}
						}
					],
					"files": [
						{
							"value": "module-0.rego"
						},
						{
							"value": "\u003cquery\u003e"
						}
					]
				},
				"plans": {
					"plans": [
						{
							"name": "eval",
							"blocks": [
								{
									"stmts": [
										{
											"type": "CallStmt",
											"stmt": {
												"func": "g0.data.test.p",
												"args": [
													{
														"type": "local",
														"value": 0
													},
													{
														"type": "local",
														"value": 1
													}
												],
												"result": 2,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 2
												},
												"target": 3,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "MakeObjectStmt",
											"stmt": {
												"target": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ObjectInsertStmt",
											"stmt": {
												"key": {
													"type": "string_index",
													"value": 0
												},
												"value": {
													"type": "local",
													"value": 3
												},
												"object": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										},
										{
											"type": "ResultSetAddStmt",
											"stmt": {
												"value": 4,
												"file": 1,
												"col": 1,
												"row": 1
											}
										}
									]
								}
							]
						}
					]
				},
				"funcs": {
					"funcs": [
						{
							"name": "g0.data.test.p",
							"params": [
								0,
								1
							],
							"return": 2,
							"blocks": [
								{
									"stmts": [
										{
											"type": "MakeSetStmt",
											"stmt": {
												"target": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ResetLocalStmt",
											"stmt": {
												"target": 3,
												"file": 0,
												"col": 1,
												"row": 3
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "base64.decode",
												"args": [
													{
														"type": "string_index",
														"value": 1
													}
												],
												"result": 4,
												"file": 0,
												"col": 13,
												"row": 4
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 4
												},
												"target": 5,
												"file": 0,
												"col": 13,
												"row": 4
											}
										},
										{
											"type": "CallStmt",
											"stmt": {
												"func": "count",
												"args": [
													{
														"type": "local",
														"value": 5
													}
												],
												"result": 6,
												"file": 0,
												"col": 7,
												"row": 4
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 6
												},
												"target": 7,
												"file": 0,
												"col": 7,
												"row": 4
											}
										},
										{
											"type": "AssignVarStmt",
											"stmt": {
												"source": {
													"type": "local",
													"value": 7
												},
												"target": 8,
												"file": 0,
												"col": 2,
												"row": 4
											}
										},
										{
											"type": "SetAddStmt",
											"stmt": {
												"value": {
													"type": "local",
													"value": 8
												},
												"set": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								},
								{
									"stmts": [
										{
											"type": "ReturnLocalStmt",
											"stmt": {
												"source": 2,
												"file": 0,
												"col": 1,
												"row": 3
											}
										}
									]
								}
							],
							"path": [
								"g0",
								"test",
								"p"
							]
						}
					]
				}
			},
			"want_plan_result": [
				{
					"x": [
						30
					]
				}
			]
		}
	]
}